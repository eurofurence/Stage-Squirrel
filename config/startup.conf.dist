# 'program_home'= Can either be an absolute path to the Stage-Squirrel home (where the server.js is located).
# When left empty, it is assumed that the startup script resides in Stage-Squirrel home.
program_home=
# 'nodejs_bin_dir'= Can either be an absolute or relative path from "program_home" to the bin dir inside your nodejs installation.
# When left empty, a node installation must be present in your $PATH.
nodejs_bin_dir=/opt/nodejs/bin
# 'logfile' = Can either be an absolute path or a realtive one from "program_home" pointing to your logfile.
logfile=log/console.log
# 'pidfile' = Can either be an absolute path or a realtive one from "program_home" pointing to the pidfile.
pidfile=sqs.pid
# 'startup_timeout' = The timeout in seconds the startup script waits for stagesquirrel to come up.
# When the started process is still alive after this period of time, the startup is considered a huge success.
startup_timeout=5
# 'sigkill_timeout' = The time in seconds waited before killing the process with SIGKILL when stopping Stage-Squirrel.
sigkill_timeout=3
# 'user' = The user Stage-Squirrel will run as.
# When left empty, the invoking user of the startup script will also start Stage-Squirrel.
# NOTE: If left empty and the script is used during init, Stage-Squirrel would be lauched with root privileges.
#       This situation will be refused by the script. In this case, configure another user here.
user=stage
